import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { useState } from "react";

const Home: NextPage = () => {
    const { data: sessionData } = useSession();

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
                {sessionData && <Header />}
                {sessionData && <Main /> || <Login />}
            </main>
        </>
    );
};

const Login: React.FC = () => {
    const { data: sessionData } = useSession();

    return (
        <div>
            <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
                <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
                    Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
                </h1>
                <button
                    className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                    onClick={sessionData ? () => void signOut() : () => void signIn()}
                >
                    {sessionData ? "Sign out" : "Sign in"}
                </button>
            </div>
        </div>
    )
}

interface Todo {
    id: string;
    title: string;
    completed: boolean;
}

const Main: React.FC = () => {
    const [newTodoTitle, setNewTodoTitle] = useState<string>("");
    const something = api.todoRouter.getTodos.useQuery();
    const mutation = api.todoRouter.addTodo.useMutation();

    const handleNewTodoTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setNewTodoTitle(e.target.value);
    }

    const addTodo = () => {
        mutation.mutate({ title: newTodoTitle });
    }

    return (
        <div className="flex-grow flex flex-col items-center justify-center">
            <div className="text-3xl font-extrabold tracking-tight">
                <div>
                    <input type="text" placeholder="Add a todo" onChange={handleNewTodoTitleChange} />
                    <button className="text-white" onClick={addTodo}>Add</button>
                </div>
                <div>
                    {something.data?.map((todo: Todo) => {
                        return (
                            <div key={todo.id}>
                                <input type="checkbox" checked={todo.completed} />
                                <span>{todo.title}</span>
                            </div>
                        )
                    })}
                </div>
            </div>
        </div>
    )
}

const Header: React.FC = () => {
    return (
        <div className="fixed top-0 left-0 right-0 bg-gradient-to-b from-[#2e026d] to-[hsl(280,100%,70%)] flex">
            <div className="font-extrabold tracking-tight text-5xl text-[#FBC40E]">Todo Time Tracker</div>
            <div className="flex-grow" />
            <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={() => void signOut()}
            >
                sign out
            </button>
        </div>
    )
}

export default Home;
